package cho.carbon.fg.eln.rule.exprecordcelne2189.valibefore

import cho.carbon.relation.RelationCorrelation;
import cho.carbon.fuse.improve.attribute.FuseAttributeFactory;
import cho.carbon.rrc.record.FGAttribute;
import cho.carbon.meta.enun.AttributeValueType;
import cho.carbon.relation.RecordRelation;
import cho.carbon.fuse.improve.attribute.FuseAttribute;
import cho.carbon.fuse.improve.attribute.OpsAttribute;
import cho.carbon.fuse.improve.attribute.mline.OpsMLineAttr;
import cho.carbon.fg.eln.constant.EnumKeyValue;
import cho.carbon.fg.eln.constant.RelationType;
import cho.carbon.fg.eln.common.CommonCalculation;
import cho.carbon.message.MessageFactory;
import cho.carbon.fg.eln.constant.item.ExpRecordCELNE2189Item;
import cho.carbon.fg.eln.constant.BaseConstant;

global java.lang.String recordCode;
global java.lang.String userCode;
global java.lang.String recordName;
global java.lang.String hostCode; 
global java.lang.String hostName;
global cho.carbon.rrc.record.FGRootRecord record;
global cho.carbon.complexus.FGRecordComplexus recordComplexus;
global java.util.List<Message> messageList;

rule "实验记录关联项目必填"
	salience 25 
	when
		not RecordRelation(type == RelationType.RR_实验记录_关联项目_实验项目);
	then
		messageList.add(MessageFactory.buildRefuseMessage("Failed", "实验记录", BaseConstant.TYPE_实验记录, "实验记录关联实验项目必填"));
end